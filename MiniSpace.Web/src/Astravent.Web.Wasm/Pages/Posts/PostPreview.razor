@inject IStudentsService StudentsService
@inject IJSRuntime JSRuntime
@using MudBlazor

@code {
    [Parameter] public PostType PostType { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public string TextContent { get; set; }
    [Parameter] public List<FilePreview> MediaFiles { get; set; } = new();
    [Parameter] public Guid UserId { get; set; }

    private StudentDto student;

    protected override async Task OnInitializedAsync()
    {
        // Fetch the student data based on the user ID
        student = await StudentsService.GetStudentAsync(UserId);
    }

    // Helper methods to return student information (in case it's useful for multiple posts)
    private string GetUserAvatar(Guid userId) => student?.ProfileImageUrl;
    private string GetUserName(Guid userId) => $"{student?.FirstName} {student?.LastName}";
}

<MudPaper Class="pa-4">
    <!-- User Info: Avatar and Name in a Row with Post Date -->
    <MudGrid>
        <MudItem Class="d-flex justify-center" xs="2" lg="1">
            <!-- User Avatar -->
            <MudAvatar Size="Size.Large" Image="@GetUserAvatar(UserId)" />
        </MudItem>
        <MudItem xs="10" lg="11">
            <!-- Username -->
            <MudText Typo="Typo.subtitle1" Class="mb-1">@GetUserName(UserId)</MudText>
            <!-- Post Date -->
            <MudText Typo="Typo.caption" Class="text-muted">Posted at: @DateTime.Now.ToString("g")</MudText>
        </MudItem>
    </MudGrid>

    <!-- Post Content -->
    @if (PostType == PostType.BlogPost)
    {
        <MudText Typo="Typo.h6" Class="mt-2">Title: @Title</MudText>
        <MudMarkdown Value="@TextContent" />
    }
    else if (PostType == PostType.SocialPost)
    {
        <MudMarkdown Value="@TextContent" />
    }

    <!-- Media Files Section -->
    @if (MediaFiles.Any())
    {
        <MudGrid Class="mt-4">
            @foreach (var file in MediaFiles)
            {
                <MudItem xs="12" sm="6">
                    <MudCard>
                        @if (file.IsImage)
                        {
                            <MudCardMedia Image="@file.Url" Title="Image" AspectRatio="16:9" />
                        }
                        else if (file.IsVideo)
                        {
                            <MudCardMedia AspectRatio="16:9">
                                <video width="100%" controls>
                                    <source src="@file.Url" type="@file.ContentType" />
                                    Your browser does not support the video tag.
                                </video>
                            </MudCardMedia>
                        }
                        else if (file.IsPdf)
                        {
                            <MudCardContent>
                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary" StartIcon="@Icons.Material.Outlined.PictureAsPdf"
                                           OnClick="@(async () => await JSRuntime.InvokeVoidAsync("open", file.Url, "_blank"))">
                                    View PDF
                                </MudButton>
                            </MudCardContent>
                        }
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudPaper>
