@using MiniSpacePwa.Areas.Identity
@using MiniSpacePwa.Areas.Friends
@using MiniSpacePwa.DTO
@using Radzen
@using MudBlazor
@using System.Globalization
@using MiniSpacePwa.Areas.Events
@using MiniSpacePwa.DTO.Enums
@using Orientation = Radzen.Orientation
@using AlignItems = Radzen.AlignItems
@using Variant = Radzen.Variant
@inject Radzen.DialogService DialogService
@inject IIdentityService IdentityService
@inject IEventsService EventsService
@inject NavigationManager NavigationManager

<RadzenFieldset>
    <RadzenDataList PageSize="10" AllowPaging="true" Data="@Reactions" TItem="ReactionDto">
        <Template Context="reaction">
            <RadzenCard Class="rz-border-radius-3">
                <RadzenRow Gap="0.5rem">
                    <RadzenColumn Size="6">
                        <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-mb-0" Style="color: darkred"
                                    Text=@(reaction.StudentFullName)/>
                    </RadzenColumn>
                    <RadzenColumn Size="3">
                        <MudIcon Icon="@($"{reaction.Type.GetReactionIcon()}")" />
                    </RadzenColumn>
                    <RadzenColumn Size="3">
                        <RadzenButton Click="@(() => NavigationManager.NavigateTo($"/student-details/{reaction.StudentId}"))" Text="View" Style="width: 100px; background-color: #006400;"/>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </Template>
    </RadzenDataList>
    <RadzenStack Gap="1rem" class="rz-pt-5" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
            <RadzenButton Click="@(() => Close())" Variant="Variant.Flat" Text="Close" Style="width: 120px"/>
        </RadzenStack>
    </RadzenStack>
</RadzenFieldset>

@code {
    [Parameter] public IEnumerable<ReactionDto> Reactions { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        StateHasChanged();
    }
    
    private void Close()
    {
        DialogService.Close();
    }
}
