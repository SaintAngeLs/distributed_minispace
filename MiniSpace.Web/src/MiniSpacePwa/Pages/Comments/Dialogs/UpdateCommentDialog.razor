@page "/comments/update/dialog"
@using MiniSpacePwa.Areas.Comments
@using MiniSpacePwa.Models.Comments
@using Radzen
@inject DialogService DialogService
@inject ICommentsService CommentsService

<RadzenTemplateForm Data="@UpdateCommentModel" Submit="@(async (UpdateCommentModel args) => { await UpdateComment(args); })">
    <RadzenStack Gap="1rem">
        <RadzenRow Gap="1rem" JustifyContent="JustifyContent.Center">
            <RadzenColumn Size="12" SizeSM="12">
                <RadzenStack>
                    <RadzenFormField Text="Content" Variant="Variant.Outlined">
                        <RadzenTextArea Style="height: 150px" @bind-Value="@UpdateCommentModel.TextContent" Name="content"/>
                        <RadzenRequiredValidator Component="content" Style="position: relative"
                                                 Text="Content is required" />
                        <RadzenLengthValidator Component="content"  Max="300" Style="position: relative"
                                               Text="Content should have at most 300 characters" />
                    </RadzenFormField>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
        <RadzenStack Gap="1rem" Orientation="Orientation.Vertical" JustifyContent="JustifyContent.SpaceBetween" Style="height: 100%;">
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
                <RadzenButton ButtonType="ButtonType.Submit" Variant="Variant.Flat" Text="Create" Style="width: 100px"/>
                <RadzenButton Click="@(() => DialogService.Close(true))" Variant="Variant.Flat" Text="Cancel" Style="width: 100px"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    [Parameter]
    public UpdateCommentModel UpdateCommentModel { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    private async Task UpdateComment(UpdateCommentModel updateCommentModel)
    {
        await CommentsService.UpdateCommentAsync(updateCommentModel.CommentId, updateCommentModel.TextContent);
        updateCommentModel.TextContent = string.Empty;
        updateCommentModel.UpdatingSubmitted = true;
        DialogService.Close(true);
    }
}
