@page "/forgot-password"
@using MiniSpacePwa.Models.Identity
@using MiniSpacePwa.Areas.Identity
@using MiniSpacePwa.Areas.Http
@inject IIdentityService IdentityService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using MiniSpacePwa.DTO
@using Radzen

<style>
    /* Inherits styles from sign-in page */
    body {
        margin: 0;
        font-family: 'Roboto', sans-serif;
        background: #f4f4f9;
        color: #333;
    }

    .split-container {
        display: flex;
        height: 100vh;
        overflow: hidden;
    }

    .left-side, .right-side {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .left-side {
        background: black; 
        position: relative;
    }

    video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .form-container {
        width: 100%;
        max-width: 400px;
        background: rgba(255, 255, 255, 0.85);
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    a, button {
        transition: color 0.3s ease, background-color 0.3s ease;
    }

    a:hover, button:hover {
        color: #007BFF;
    }
</style>

<div class="split-container">
    <div class="left-side">
        <video id="videoPlayer" autoplay muted loop>
            <source src="videos/video-component/video_1.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>
    <div class="right-side">
        <div class="form-container">
            <div class="sign-in-up-pre-info">
                <h2>Forgot Your Password?</h2>
    
                <p>Enter your email address and we will send you a link to reset your password.</p>
            </div>
            <RadzenTemplateForm Data="@resetModel" Submit="@(async (ResetModel model) => await HandleResetPassword(model))">
                <RadzenFieldset>
                    <RadzenStack Gap="1rem">
                        <RadzenTextBox Name="email" Placeholder="Email" Style="width: 100%;" @bind-Value="resetModel.Email" />
                        <RadzenRequiredValidator Component="email" Text="Email is required" />
                        <RadzenEmailValidator Component="email" Text="Email is invalid" />

                        <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Large" Text="Send Reset Link"/>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenTemplateForm>

            <div style="text-align: center; margin-top: 3rem !important;">
                <a href="/signin">Return to Sign In</a>
            </div>
        </div>
    </div>
</div>

@code {
    private ResetModel resetModel = new ResetModel();
    private bool showError = false;
    private string errorMessage = string.Empty;

   private async Task HandleResetPassword(ResetModel model)
    {
        await IdentityService.ForgotPasswordAsync(model.Email);
        NavigationManager.NavigateTo("/reset-password-confirm");
    }

}
