@using Radzen

<RadzenRow AlignItems="AlignItems.Center">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenLabel Component="@Id">
            <strong>@LabelText</strong>
        </RadzenLabel>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="5">
        <RadzenTextBox Style="width: 100%;" Disabled="@Disabled" Name="@Id" @bind-Value="Value"/>
        @if (ValueRequired)
        {
            <RadzenRequiredValidator Component=@Id Text="Description is required" Popup=@Popup
                                     Style="position: absolute"/>
        }
    </RadzenColumn>
</RadzenRow>

@code
{
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string LabelText { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public bool ValueRequired { get; set; }
    [Parameter]
    public bool Popup { get; set; }
    [Parameter]
    public string Value
    {
        get => _value;
        set 
        { 
            if (!Equals(value, _value))
            {
                _value = value;
                if (ValueChanged.HasDelegate)
                    ValueChanged.InvokeAsync(_value);
            }
        }
    }
    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }
    
    private string _value;

    protected override void OnParametersSet()
    {
        _value = Value;
    }
}
