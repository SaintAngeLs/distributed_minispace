@page "/"
@namespace MiniSpace.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MiniSpace | Social</title>
    <base href="~/" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&display=swap" rel="stylesheet">
    
    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet">
    <link href="_content/Cropper.Blazor/cropper.min.css" rel="stylesheet" />
    @* <script src="spotlight.bundle.js"></script> *@
    <script src="js/cropperInterop.js"></script>
    <script src="js/infiniteScroll.js"></script>
    <script src="js/jquery/jquery-3.5.1.min.js"></script>
    <script src="js/popper/popper.min.js"></script>
    
    <script src="js/bootstrap/bootstrap.min.js"></script>
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="manifest" href="manifest.webmanifest" />
    <meta name="theme-color" content="#03173d" />

    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />

    <link href="_content/MudBlazor.Markdown/MudBlazor.Markdown.min.css" rel="stylesheet" />
  
</head>
<body>
    <app>
        @(await Html.RenderComponentAsync<App>(RenderMode.Server))
    </app>
 
    <div id="components-reconnect-modal">
        <div class="reconnecting overlay-content">
            <div class="loading-animation">
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>

                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
            </div>
            <p>Attempting to reconnect to the classter...</p>
             <div class="loading">
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
            </div>
        </div>
        <div class="failedToConnect overlay-content">
             <div class="loading-animation">
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>

                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
            </div>
            <p>Attempting to reconnect to the classter...</p>
             <div class="loading">
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
            </div>
            <img src="images/failed_to_connect.svg" alt="Failed to Connect" style="width: 100px; height: 100px;">
            <p>Failed to connect to the server</p>
            <button class="overlay-button" onclick="ReconnectToServer()">Reconnect</button>
        </div>
        <div class="connectionRejected overlay-content">
             <div class="loading-animation">
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>

                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
                <div class="circle"></div>
            </div>
            <p>Attempting to reconnect to the classter...</p>
             <div class="loading">
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
                <span>.</span>
            </div>
            <img src="images/failed_to_connect.svg" alt="Connection Rejected" style="width: 100px; height: 100px;">
            <p>Connection to the server was rejected</p>
            <button class="overlay-button" onclick="ReloadPage()">Refresh Page</button>
        </div>
    </div>


    <script>
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('service-worker.js')
                .then(function(registration) {
                    console.log('ServiceWorker registration successful with scope: ', registration.scope);
                })
                .catch(function(error) {
                    console.log('ServiceWorker registration failed: ', error);
                });
        }
        

        window.getScreenSize = function () {
            return {
                width: window.innerWidth,
                height: window.innerHeight
            };
        };

        window.onresize = function () {
            DotNet.invokeMethodAsync('MiniSpace.Web', 'UpdateScreenSize');
        };

        window.scrollToSection = function (sectionId) {
            let attempt = 0;
            const maxAttempts = 10;
            const attemptInterval = 300; // milliseconds

            const scroll = () => {
                const sectionElement = document.getElementById(sectionId);
                if (sectionElement) {
                    sectionElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                } else if (attempt++ < maxAttempts) {
                    setTimeout(scroll, attemptInterval);
                }
            };

            scroll();
        };

        function playNotificationSound() {
            var audio = new Audio('sounds/create-connection-new.wav');
            audio.play();
        }

        function playNotificationSoundNotificationsService() {
            var audio = new Audio('sounds/new-notification1.mp3');
            audio.play();
        }

        function getUserTimezoneOffset() {
            return new Date().getTimezoneOffset();
        }

        function updateTitle(message) {
            document.title = message;
            setTimeout(() => document.title = "MiniSpace | Social", 8000);
        }

        // Initialize SignalR connection
        let userId;

        window.setUserId = function (id) {
            userId = id;
            initializeSignalR();
        };

        function initializeSignalR() {
            if (!userId) return;

            const connection = new signalR.HubConnectionBuilder()
                .withUrl(`http://localhost:5006/notificationHub?userId=${userId}`)
                .withAutomaticReconnect()
                .build();

            connection.on("ReceiveNotification", function (jsonMessage) {
                var notification = JSON.parse(jsonMessage);
                console.log("Notification received: ", notification);

                playNotificationSoundNotificationsService();

                connection.invoke("AcknowledgeNotification", notification.UserId, notification.NotificationId)
                    .then(function () {
                        console.log("Acknowledgment sent for notification: ", notification.NotificationId);
                    })
                    .catch(function (err) {
                        console.error(err.toString());
                    });
            });

            connection.start().then(function () {
                console.log("SignalR connection established.");
            }).catch(function (err) {
                console.error("Error establishing SignalR connection: ", err.toString());
            });
        }

        window.getSystemTheme = () => {
            return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };


    </script>

    

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="_content/MudBlazor.Markdown/MudBlazor.Markdown.min.js"></script>
    <script src="js/spotlight/spotlight.bundle.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />
</body>
</html>
