@page "/"
@namespace MiniSpace.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MiniSpace | Social</title>
    <base href="~/" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/humanistic-base.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="_content/Syncfusion.Blazor.Themes/bootstrap5.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
</head>
<body>
    <app>
        @(await Html.RenderComponentAsync<App>(RenderMode.Server))
    </app>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script>
        window.scrollToSection = function scrollToSection(sectionId) {
            let attempt = 0;
            const maxAttempts = 10;
            const attemptInterval = 300; // milliseconds

            const scroll = () => {
                const sectionElement = document.getElementById(sectionId);
                if (sectionElement) {
                    sectionElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                } else if (attempt++ < maxAttempts) {
                    setTimeout(scroll, attemptInterval);
                }
            };

            scroll();
        }

        function playNotificationSound() {
            var audio = new Audio('sounds/create-connection-new.wav');
            audio.play();
        }

        function playNotificationSoundNotificationsService() {
            var audio = new Audio('sounds/new-notification.wav');
            audio.play();
        }

        function getUserTimezoneOffset() {
            return new Date().getTimezoneOffset();
        }

        function updateTitle(message) {
            document.title = message;
            setTimeout(() => document.title = "MiniSpace | Social", 8000); 
        }

        // Initialize SignalR connection
        let userId;

        window.setUserId = function (id) {
            userId = id;
            initializeSignalR();
        };

        function initializeSignalR() {
            if (!userId) return;

            const connection = new signalR.HubConnectionBuilder()
                .withUrl(`http://localhost:5006/notificationHub?userId=${userId}`)
                .withAutomaticReconnect()
                .build();

            connection.on("ReceiveNotification", function (jsonMessage) {
                var notification = JSON.parse(jsonMessage);
                console.log("Notification received: ", notification);

                // Send acknowledgment back to the server
                connection.invoke("AcknowledgeNotification", notification.UserId, notification.NotificationId)
                    .then(function () {
                        console.log("Acknowledgment sent for notification: ", notification.NotificationId);
                    })
                    .catch(function (err) {
                        console.error(err.toString());
                    });
            });

            connection.start().then(function () {
                console.log("SignalR connection established.");
            }).catch(function (err) {
                console.error("Error establishing SignalR connection: ", err.toString());
            });
        }
    </script>
</body>
</html>
