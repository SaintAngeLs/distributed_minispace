@page "/user-information/{UserId:guid}"
@using MiniSpace.Web.DTO
@using MiniSpace.Web.Areas.Students
@inject IStudentsService StudentsService
@inject NavigationManager NavigationManager
@using MudBlazor

<MudPaper Class="profile-paper">
    @if (student != null)
    {
        <MudGrid>
            <MudItem xs="12">
                <MudCard Class="profile-card">
                    <MudCardContent>
                        <div class="profile-header">
                            <MudAvatar Image="@GetProfileImage()" Style="height:150px; width:150px;" Class="profile-avatar" />
                            <div class="profile-info">
                                <MudText Typo="Typo.h4" Class="profile-name">@($"{student.FirstName} {student.LastName}")</MudText>
                                <MudText Typo="Typo.subtitle1" Class="profile-description">@student.Description</MudText>
                                <MudButton Variant="MudBlazor.Variant.Filled" Color="MudBlazor.Color.Primary" OnClick="@NavigateToProfileSettings">Edit Profile</MudButton>
                            </div>
                        </div>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12">
                <MudGrid>
                    @if (!string.IsNullOrEmpty(student.ContactEmail))
                    {
                        <MudItem xs="12" md="12">
                            <MudCard Class="info-card modern-card">
                                <MudCardHeader>
                                    <MudIcon Icon="@Icons.Material.Filled.Email" Class="icon-margin" />
                                    <MudText Typo="Typo.h6">Contact Information</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.MailOutline" /> <a href="mailto:@student.ContactEmail">@student.ContactEmail</a></MudText>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }

                    @if (student.Education != null && student.Education.Any())
                    {
                        <MudItem xs="12" md="12">
                            <MudCard Class="info-card modern-card">
                                <MudCardHeader>
                                    <MudIcon Icon="@Icons.Material.Filled.School" Class="icon-margin" />
                                    <MudText Typo="Typo.h6">Education</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    @foreach (var education in student.Education)
                                    {
                                        <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.School" /> @education.Degree at @education.InstitutionName</MudText>
                                        <MudText Typo="Typo.caption" Class="text-muted">@education.StartDate?.ToString("MMMM yyyy") - @education.EndDate?.ToString("MMMM yyyy")</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }

                    @if (student.Work != null && student.Work.Any())
                    {
                        <MudItem xs="12">
                            <MudCard Class="info-card modern-card">
                                <MudCardHeader>
                                    <MudIcon Icon="@Icons.Material.Filled.Work" Class="icon-margin" />
                                    <MudText Typo="Typo.h6">Work Experience</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    @foreach (var work in student.Work)
                                    {
                                        <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.BusinessCenter" /> @work.Position at @work.Company</MudText>
                                        <MudText Typo="Typo.caption" Class="text-muted">@work.StartDate?.ToString("MMMM yyyy") - @work.EndDate?.ToString("MMMM yyyy")</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }

                    @if ((student.Languages != null && student.Languages.Any()) || (student.Interests != null && student.Interests.Any()))
                    {
                        <MudItem xs="12">
                            <MudCard Class="info-card modern-card">
                                <MudCardHeader>
                                    <MudIcon Icon="@Icons.Material.Filled.Interests" Class="icon-margin" />
                                    <MudText Typo="Typo.h6">Skills and Interests</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    @if (student.Languages != null && student.Languages.Any())
                                    {
                                        <MudText Typo="Typo.body2" Class="skill-interest-text">
                                            <MudIcon Icon="@Icons.Material.Filled.Language" /> Languages:
                                            @foreach (var language in student.Languages)
                                            {
                                                <span class="skill-interest-item" style="font-size:@GetRandomFontSize()px;">@language</span>
                                            }
                                        </MudText>
                                    }
                                    @if (student.Interests != null && student.Interests.Any())
                                    {
                                        <MudText Typo="Typo.body2" Class="skill-interest-text">
                                            <MudIcon Icon="@Icons.Material.Filled.Star" /> Interests:
                                            @foreach (var interest in student.Interests)
                                            {
                                                <span class="skill-interest-item" style="font-size:@GetRandomFontSize()px;">@interest</span>
                                            }
                                        </MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }


                    @if ((student.InterestedInEvents != null && student.InterestedInEvents.Any()) || (student.SignedUpEvents != null && student.SignedUpEvents.Any()))
                    {
                        <MudItem xs="12">
                            <MudCard Class="info-card modern-card">
                                <MudCardHeader>
                                    <MudIcon Icon="@Icons.Material.Filled.Event" Class="icon-margin" />
                                    <MudText Typo="Typo.h6">Events</MudText>
                                </MudCardHeader>
                                <MudCardContent>
                                    @if (student.InterestedInEvents != null && student.InterestedInEvents.Any())
                                    {
                                        <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.EventAvailable" /> Interested in: @string.Join(", ", student.InterestedInEvents.Select(e => e.ToString()))</MudText>
                                    }
                                    @if (student.SignedUpEvents != null && student.SignedUpEvents.Any())
                                    {
                                        <MudText Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.EventNote" /> Signed Up for: @string.Join(", ", student.SignedUpEvents.Select(e => e.ToString()))</MudText>
                                    }
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    }
                </MudGrid>
            </MudItem>
        </MudGrid>
    }
</MudPaper>

@code {
    [Parameter]
    public Guid UserId { get; set; }

    private StudentDto student;
    private static readonly Random random = new Random();

    protected override async Task OnInitializedAsync()
    {
        student = await StudentsService.GetStudentAsync(UserId);
    }

    private string GetProfileImage()
    {
        var defaultImage = "images/default_profile_image.webp";
        var validExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp" };

        if (string.IsNullOrEmpty(student?.ProfileImageUrl) || !validExtensions.Contains(System.IO.Path.GetExtension(student.ProfileImageUrl)?.ToLower()))
        {
            return defaultImage;
        }

        return student.ProfileImageUrl;
    }

    private void NavigateToProfileSettings()
    {
        NavigationManager.NavigateTo("/account");
    }

    private int GetRandomFontSize()
    {
        // Generate a random font size between 14px and 24px
        return random.Next(10, 20);
    }
}

<style>
    .profile-paper {
        margin: 30px auto;
        max-width: 1200px;
        background-color: #f7f9fc;
        border-radius: 12px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    }

    .profile-header {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        text-align: center;
        margin-bottom: 25px;
    }

    .profile-avatar {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        margin-bottom: 15px;
        border: 3px solid #e0e0e0;
    }

    .profile-info {
        margin-top: 15px;
    }

    .profile-name {
        font-weight: bold;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .profile-description {
        color: #34495e;
    }

    .info-card {
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .modern-card {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

    .icon-margin {
        margin-right: 10px;
        color: #2c3e50;
    }

    a {
        color: #1e88e5;
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }

    .text-muted {
        color: #7f8c8d;
    }

    .skill-interest-text {
        word-wrap: break-word;
        white-space: normal; 
        display: flex; 
        flex-wrap: wrap; 
    }

    .skill-interest-item {
        margin-right: 8px;
        margin-bottom: 8px; 
        background-color: #f5f5f5; 
        padding: 2px 6px; 
        border-radius: 4px; 
        line-height: 1.2; /* Ensures good vertical spacing */
        display: inline-block;
        max-width: 100%; /* Ensures item stays within container */
    }

    .info-card {
        padding: 16px;
    }
</style>