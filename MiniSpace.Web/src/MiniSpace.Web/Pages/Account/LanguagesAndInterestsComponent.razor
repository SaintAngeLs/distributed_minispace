@page "/languages-and-interests"
@inject IIdentityService IdentityService
@inject IStudentsService StudentsService
@using MudBlazor
@using MiniSpace.Web.DTO.Interests
@using MiniSpace.Web.DTO.Languages

<MudText Typo="Typo.h6" GutterBottom="true">Languages & Interests</MudText>
@if (isLoading)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
}
else
{
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h5" GutterBottom="true">Languages</MudText>
            <MudSelect T="Language" @bind-SelectedValues="selectedLanguages" Label="Select Languages" Variant="Variant.Outlined" MultiSelection="true">
                @foreach (var language in Enum.GetValues(typeof(Language)))
                {
                    <MudSelectItem Value="@(Language)language">@language.ToString()</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.h5" GutterBottom="true">Interests</MudText>
            <MudSelect T="Interest" @bind-SelectedValues="selectedInterests" Label="Select Interests" Variant="Variant.Outlined" MultiSelection="true">
                @foreach (var interest in Enum.GetValues(typeof(Interest)))
                {
                    <MudSelectItem Value="@(Interest)interest">@interest.ToString()</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveChanges">Save Changes</MudButton>
        </MudItem>
    </MudGrid>
}

@code {
    [Parameter] public bool isLoading { get; set; }
    [Parameter] public StudentWithGalleryImagesDto studentWithGalleryImagesDto { get; set; }

    private HashSet<Language> selectedLanguages = new HashSet<Language>();
    private HashSet<Interest> selectedInterests = new HashSet<Interest>();

    protected override void OnParametersSet()
    {
        if (studentWithGalleryImagesDto?.Student != null)
        {
            selectedLanguages = new HashSet<Language>(studentWithGalleryImagesDto.Student.Languages.Select(l => Enum.Parse<Language>(l)));
            selectedInterests = new HashSet<Interest>(studentWithGalleryImagesDto.Student.Interests.Select(i => Enum.Parse<Interest>(i)));
        }
    }

    private async Task SaveChanges()
    {
        studentWithGalleryImagesDto.Student.Languages = selectedLanguages.Select(l => l.ToString()).ToList();
        studentWithGalleryImagesDto.Student.Interests = selectedInterests.Select(i => i.ToString()).ToList();

        // Save changes to the server
        await StudentsService.UpdateStudentLanguagesAndInterestsAsync(
            studentWithGalleryImagesDto.Student.Id,
            studentWithGalleryImagesDto.Student.Languages,
            studentWithGalleryImagesDto.Student.Interests.Select(i => new InterestDto { Name = i })
        );

        // Update StudentDto after saving changes
        await StudentsService.UpdateStudentDto(studentWithGalleryImagesDto.Student.Id);
    }
}
