@page "/organizations/following"
@inject IOrganizationsService OrganizationsService
@inject IIdentityService IdentityService
@inject NavigationManager NavigationManager
@using MudBlazor
@using MiniSpace.Web.DTO.Organizations
@using System.Threading.Tasks

<AuthWrapper>
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h4" GutterBottom="true">Organizations You're Following</MudText>

        <MudGrid Class="mt-4">
            @if (_organizations != null && _organizations.Any())
            {
                @foreach (var organization in _organizations)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudCard Class="ma-2" Style="height: 100%;">
                            <MudCardMedia Image="@organization.OrganizationDetails.ImageUrl" Height="140" />
                            <MudCardContent>
                                <MudText Typo="Typo.h6">@organization.OrganizationDetails.Name</MudText>
                                <MudText Typo="Typo.body2" Class="mb-2">@organization.OrganizationDetails.Description</MudText>
                                <MudText Typo="Typo.caption" Color="Color.Primary">Users: @organization.Users.Count()</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => NavigateToOrganization(organization.OrganizationDetails.Id)">
                                    View
                                </MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            }
            else
            {
                <MudText Typo="Typo.subtitle1" Color="Color.Secondary">You're not following any organizations yet.</MudText>
            }
        </MudGrid>
    </MudPaper>
</AuthWrapper>

@code {
    private IEnumerable<OrganizationGalleryUsersDto> _organizations;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _isLoading = true;

            await IdentityService.InitializeAuthenticationState();

            if (IdentityService.IsAuthenticated)
            {
                _organizations = await OrganizationsService.GetUserFollowedOrganizationsAsync(IdentityService.UserDto.Id);
            }
            else
            {
                NavigationManager.NavigateTo("/signin", forceLoad: true);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during initialization: {ex.Message}");
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void NavigateToOrganization(Guid organizationId)
    {
        NavigationManager.NavigateTo($"/organizations/details/{organizationId}");
    }
}
