@page "/organizations/overview/{OrganizationId:guid}"
@inject IOrganizationsService OrganizationsService
@inject IIdentityService IdentityService
@using MiniSpace.Web.DTO.Organizations
@using MiniSpace.Web.DTO.Enums
@using MudBlazor

<AuthWrapper>
<MudContainer Class="pa-0">
    @if (isLoading)
    {
        <MudProgressCircular Indeterminate="true" Class="my-4" />
    }
    else if (organization == null)
    {
        <MudText Color="Color.Error">Failed to load organization overview.</MudText>
    }
    else
    {
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h4" Align="Align.Center">@organization.Name</MudText>
            <MudDivider Class="my-4"/>

            <MudText Typo="Typo.h6">Description</MudText>
            <MudText Class="mb-4">@organization.Description</MudText>

            <MudText Typo="Typo.h6">Members</MudText>
            <MudList Dense="true">
                @foreach (var user in organization.Users)
                {
                    <MudListItem>
                        <MudText>@user.Id - @user.Role.Name</MudText>
                    </MudListItem>
                }
            </MudList>

            <MudDivider Class="my-4"/>

            <MudText Typo="Typo.h6">Roles</MudText>
            <MudList Dense="true">
                @foreach (var role in organization.Roles)
                {
                    <MudListItem>
                        <MudText>@role.Name</MudText>
                    </MudListItem>
                }
            </MudList>

            <MudDivider Class="my-4"/>

            <MudText Typo="Typo.h6">Gallery</MudText>
            <MudGrid>
                @foreach (var image in organization.Gallery)
                {
                    <MudItem xs="12" sm="6" md="4">
                        <MudCard>
                            <MudCardMedia Src="@image.ImageUrl" Alt="Gallery Image" />
                            <MudCardContent>
                                <MudText Align="Align.Center">@image.DateAdded.ToShortDateString()</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
        </MudPaper>
    }
</MudContainer>
</AuthWrapper>

@code {
    [Parameter]
    public Guid OrganizationId { get; set; }

    private OrganizationDetailsDto organization;
    private bool isLoading = true;

    // Inject NavigationManager here
    [Inject] private NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        try
        {
            await IdentityService.InitializeAuthenticationState();
            if (IdentityService.IsAuthenticated)
            {
                var response = await OrganizationsService.GetOrganizationWithGalleryAndUsersAsync(OrganizationId);
                organization = response.OrganizationDetails;
            }
            else
            {
                NavigationManager.NavigateTo("/signin", forceLoad: true);
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine(ex);
            organization = null;
        }
        finally
        {
            isLoading = false;
        }
    }
}
