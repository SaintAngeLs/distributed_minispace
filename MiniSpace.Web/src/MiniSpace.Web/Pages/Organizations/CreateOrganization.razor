@page "/organizations/create"
@inject IOrganizationsService OrganizationsService
@inject ISnackbar Snackbar
@inject IIdentityService IdentityService
@inject IMediaFilesService MediaFilesService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using MiniSpace.Web.Utilities
@using MudBlazor
@using System.IO
@using MiniSpace.Web.Areas.Organizations.CommandsDto


<MudText Typo="Typo.h5" GutterBottom="true">Create New Organization</MudText>

<MudPaper Elevation="1" Class="pa-4">
    <MudForm Model="organizationModel" @ref="form" Validated="OnValidSubmit">
        <MudTextField @bind-Value="organizationModel.Name" Label="Organization Name" Required="true" />
        <MudTextField @bind-Value="organizationModel.Description" Label="Description" Required="false" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SubmitForm">
            Create Organization
        </MudButton>

        <!-- Back Button -->
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="GoBack" Style="margin-top: 10px;">
            Back
        </MudButton>
    </MudForm>
</MudPaper>


@code {
    private MudForm form;
    private CreateOrganizationDto organizationModel = new CreateOrganizationDto();
    private bool _isSubmitting = false;

    private async Task SubmitForm()
    {
        await form.Validate();

        if (form.IsValid)
        {
            _isSubmitting = true;

            try
            {
                organizationModel.OrganizationId = Guid.NewGuid();
                organizationModel.OwnerId = IdentityService.GetCurrentUserId();

                // Ensure ParentId and RootId are null for root organizations
                organizationModel.ParentId = null; // These are now nullable, so null is valid
                organizationModel.RootId = null;

                var response = await OrganizationsService.CreateOrganizationAsync(organizationModel);

                if (response.IsSuccessStatusCode)
                {
                    Snackbar.Add("Organization created successfully.", Severity.Success);
                    NavigationManager.NavigateTo($"/organizations/details/{organizationModel.OrganizationId}");
                }
                else
                {
                    Snackbar.Add("Failed to create organization.", Severity.Error);
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"An error occurred: {ex.Message}", Severity.Error);
            }

            _isSubmitting = false;
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/organizations/my");
    }
}
